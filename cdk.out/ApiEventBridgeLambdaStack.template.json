{
 "Resources": {
  "eventProducerLambdaServiceRoleD019EB99": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventProducerLambda/ServiceRole/Resource"
   }
  },
  "eventProducerLambdaServiceRoleDefaultPolicy73C54CA7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "eventProducerLambdaServiceRoleDefaultPolicy73C54CA7",
    "Roles": [
     {
      "Ref": "eventProducerLambdaServiceRoleD019EB99"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventProducerLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "eventProducerLambda100D549C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "26684a1265d786d8c86f5d3267a8e2d2351964b2b03ef74dda39ed5439ad62bd.zip"
    },
    "Handler": "event_producer_lambda.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "eventProducerLambdaServiceRoleD019EB99",
      "Arn"
     ]
    },
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "eventProducerLambdaServiceRoleDefaultPolicy73C54CA7",
    "eventProducerLambdaServiceRoleD019EB99"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventProducerLambda/Resource",
    "aws:asset:path": "asset.26684a1265d786d8c86f5d3267a8e2d2351964b2b03ef74dda39ed5439ad62bd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "eventConsumer1LambdaServiceRoleC8CCBFC5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer1Lambda/ServiceRole/Resource"
   }
  },
  "eventConsumer1Lambda4AF2292E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "26684a1265d786d8c86f5d3267a8e2d2351964b2b03ef74dda39ed5439ad62bd.zip"
    },
    "Handler": "event_consumer_lambda.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "eventConsumer1LambdaServiceRoleC8CCBFC5",
      "Arn"
     ]
    },
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "eventConsumer1LambdaServiceRoleC8CCBFC5"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer1Lambda/Resource",
    "aws:asset:path": "asset.26684a1265d786d8c86f5d3267a8e2d2351964b2b03ef74dda39ed5439ad62bd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "eventConsumer1LambdaRule288E5FF9": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Approved Transactions",
    "EventPattern": {
     "source": [
      "com.mycompany.myapp"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "eventConsumer1Lambda4AF2292E",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer1LambdaRule/Resource"
   }
  },
  "eventConsumer1LambdaRuleAllowEventRuleApiEventBridgeLambdaStackeventConsumer1Lambda3A2F7294318BC23E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "eventConsumer1Lambda4AF2292E",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "eventConsumer1LambdaRule288E5FF9",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer1LambdaRule/AllowEventRuleApiEventBridgeLambdaStackeventConsumer1Lambda3A2F7294"
   }
  },
  "SQSQueue7674CD17": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SQSQueue/Resource"
   }
  },
  "SQSQueuePolicy4691EEED": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "eventConsumer2LambdaRule54312CB1",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "SQSQueue7674CD17",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "SQSQueue7674CD17"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SQSQueue/Policy/Resource"
   }
  },
  "eventConsumer2LambdaRule54312CB1": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Approved Transactions",
    "EventPattern": {
     "source": [
      "com.mycompany.myapp"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "SQSQueue7674CD17",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer2LambdaRule/Resource"
   }
  },
  "eventConsumer2LambdaServiceRole6B878884": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer2Lambda/ServiceRole/Resource"
   }
  },
  "eventConsumer2LambdaServiceRoleDefaultPolicy37CE853E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SQSQueue7674CD17",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "eventConsumer2LambdaServiceRoleDefaultPolicy37CE853E",
    "Roles": [
     {
      "Ref": "eventConsumer2LambdaServiceRole6B878884"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer2Lambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "eventConsumer2Lambda1631C47A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "26684a1265d786d8c86f5d3267a8e2d2351964b2b03ef74dda39ed5439ad62bd.zip"
    },
    "Handler": "event_consumer_lambda.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "eventConsumer2LambdaServiceRole6B878884",
      "Arn"
     ]
    },
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "eventConsumer2LambdaServiceRoleDefaultPolicy37CE853E",
    "eventConsumer2LambdaServiceRole6B878884"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer2Lambda/Resource",
    "aws:asset:path": "asset.26684a1265d786d8c86f5d3267a8e2d2351964b2b03ef74dda39ed5439ad62bd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "eventConsumer2LambdaSqsEventSourceApiEventBridgeLambdaStackSQSQueue93F8558673C8DB35": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "EventSourceArn": {
     "Fn::GetAtt": [
      "SQSQueue7674CD17",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "eventConsumer2Lambda1631C47A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/eventConsumer2Lambda/SqsEventSource:ApiEventBridgeLambdaStackSQSQueue93F85586/Resource"
   }
  },
  "SampleAPIEventBridgeMultiConsumer52DC1403": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "SampleAPI-EventBridge-Multi-Consumer"
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Resource"
   }
  },
  "SampleAPIEventBridgeMultiConsumerCloudWatchRoleE43B891E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/CloudWatchRole/Resource"
   }
  },
  "SampleAPIEventBridgeMultiConsumerAccount468DDDC0": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "SampleAPIEventBridgeMultiConsumerCloudWatchRoleE43B891E",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "SampleAPIEventBridgeMultiConsumer52DC1403"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Account"
   }
  },
  "SampleAPIEventBridgeMultiConsumerDeploymentD1A021868a8af37caaafdc0f762b784f7555ad86": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
    }
   },
   "DependsOn": [
    "SampleAPIEventBridgeMultiConsumeritemsPOSTD2DFDA56",
    "SampleAPIEventBridgeMultiConsumeritems997C90A7"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Deployment/Resource"
   }
  },
  "SampleAPIEventBridgeMultiConsumerDeploymentStageprodDE087A58": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "SampleAPIEventBridgeMultiConsumerDeploymentD1A021868a8af37caaafdc0f762b784f7555ad86"
    },
    "RestApiId": {
     "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "SampleAPIEventBridgeMultiConsumerAccount468DDDC0"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/DeploymentStage.prod/Resource"
   }
  },
  "SampleAPIEventBridgeMultiConsumeritems997C90A7": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "SampleAPIEventBridgeMultiConsumer52DC1403",
      "RootResourceId"
     ]
    },
    "PathPart": "items",
    "RestApiId": {
     "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Default/items/Resource"
   }
  },
  "SampleAPIEventBridgeMultiConsumeritemsPOSTApiPermissionApiEventBridgeLambdaStackSampleAPIEventBridgeMultiConsumerF10899BCPOSTitemsA86E071B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "eventProducerLambda100D549C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
       },
       "/",
       {
        "Ref": "SampleAPIEventBridgeMultiConsumerDeploymentStageprodDE087A58"
       },
       "/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Default/items/POST/ApiPermission.ApiEventBridgeLambdaStackSampleAPIEventBridgeMultiConsumerF10899BC.POST..items"
   }
  },
  "SampleAPIEventBridgeMultiConsumeritemsPOSTApiPermissionTestApiEventBridgeLambdaStackSampleAPIEventBridgeMultiConsumerF10899BCPOSTitems910D1EE7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "eventProducerLambda100D549C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
       },
       "/test-invoke-stage/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Default/items/POST/ApiPermission.Test.ApiEventBridgeLambdaStackSampleAPIEventBridgeMultiConsumerF10899BC.POST..items"
   }
  },
  "SampleAPIEventBridgeMultiConsumeritemsPOSTD2DFDA56": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "eventProducerLambda100D549C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "SampleAPIEventBridgeMultiConsumeritems997C90A7"
    },
    "RestApiId": {
     "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/SampleAPI-EventBridge-Multi-Consumer/Default/items/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2WR3U7DMAyFn2X3mWEUIXG5H7hionQPMHmpt4W1SZkdpirKu6OkQx3iJv7OkXMSJw8wKx7hfoIXnur6NG3MDsJGUJ8UXngbGmx3NUJ49VaLcVYt9/aWSzq3hjmpl2+ysnH+rGmNXWfsITX8d6My2EKoXEOpIdfSNUb3OTBTVFxskZmEYZ6K4gIWXp9IFsikKKUyhMpfQ3xDUfEXQ/jw5LM3QF7H+BsZFXbmgEIX7CG85UErYpl3JkeOONfaeStqRV3j+pasJPdGbQQP+cwBKuI8cL7qr7hmDrwmObo6WQPFOPbleVPQ9QXfvXRe/mxf7u3S2dqkX4iq7OXo7F0BzzB7mnyyMdOzt2JagmqoP4iMLxLmAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiEventBridgeLambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "SampleAPIEventBridgeMultiConsumerEndpoint93C2DFF8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "SampleAPIEventBridgeMultiConsumer52DC1403"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "SampleAPIEventBridgeMultiConsumerDeploymentStageprodDE087A58"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}